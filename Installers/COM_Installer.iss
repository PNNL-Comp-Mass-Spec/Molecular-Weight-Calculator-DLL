; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define ReleaseVersion GetFileVersion('..\MolecularWeightCalculatorLib\bin\Release\MolecularWeightCalculator.dll')
#define MyAppName "Molecular Weight Calculator COM DLL"
#define MyAppVersion ReleaseVersion
#define MySource "..\MolecularWeightCalculatorLib"
#define MyAppPublisher "PNNL"
#define MyAppURL "https://github.com/PNNL-Comp-Mass-Spec/Molecular-Weight-Calculator-DLL"
#define InstallerFolder "..\Installers\COM_Installer"
#if ReleaseVersion == ""
     #error "MolecularWeightCalculator.dll was not found in the Release directory; rebuild the app in Release mode"
#endif

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{CB85847E-14A0-42BE-8139-65AAE9FE968E}
; As AnyCPU, we can install as 32-bit or 64-bit, so allow installing on 32-bit Windows, but make sure it installs as 64-bit on 64-bit Windows
ArchitecturesAllowed=x64 x86
ArchitecturesInstallIn64BitMode=x64
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\MolecularWeightCalculatorDll
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputDir={#InstallerFolder}
OutputBaseFilename=MolWtCalc_COM_Installer
AppCopyright=© PNNL
VersionInfoVersion={#MyAppVersion}
VersionInfoCompany=PNNL
VersionInfoDescription=MolecularWeightCalculator .NET DLL
VersionInfoCopyright=PNNL
SourceDir={#MySource}
Compression=lzma
SolidCompression=yes
DisableWelcomePage=no
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "bin\Release\MolecularWeightCalculator.dll";                DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\MolecularWeightCalculator32.tlb";              DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\MolecularWeightCalculator64.tlb";              DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
Source: "..\Readme.md"; DestName: "Readme.txt";                     DestDir: "{app}"; Flags: ignoreversion isreadme
Source: "..\RevisionHistory.txt";                                   DestDir: "{app}"; Flags: ignoreversion


[Run]
; Register with both 32-bit and 64-bit COM
; We generated the .tlb files for referencing at compile time, but COM can't find the DLL unless it's registered.
; Possible TODO: Maybe make the changes to also support registration-free COM activation? (can Excel use this?)
Filename: "{dotnet40}\regasm.exe"; Parameters: "MolecularWeightCalculator.dll /codebase"; WorkingDir: "{app}"; Flags: runhidden
Filename: "{dotnet4064}\regasm.exe"; Parameters: "MolecularWeightCalculator.dll /codebase"; WorkingDir: "{app}"; Flags: runhidden; Check: IsWin64

[UninstallRun]    
; Unregister from both 32-bit and 64-bit COM
Filename: "{dotnet40}\regasm.exe"; Parameters: /u MolecularWeightCalculator.dll; WorkingDir: {app}; Flags: runhidden
Filename: "{dotnet4064}\regasm.exe"; Parameters: /u MolecularWeightCalculator.dll; WorkingDir: {app}; Flags: runhidden; Check: IsWin64;

[Code]
function InitializeSetup(): Boolean;
var
    key: string;
    NetFrameWorkInstalled : Boolean;
    release, minVersion: cardinal;
begin
    // https://docs.microsoft.com/en-us/dotnet/framework/migration-guide/how-to-determine-which-versions-are-installed
    // http://kynosarges.org/DotNetVersion.html
    key := 'SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full';
    minVersion := 461808;
    Result := false;
    NetFrameWorkInstalled := RegKeyExists(HKLM, key);
    if NetFrameWorkInstalled =true then
    begin
        Result := RegQueryDWordValue(HKLM, key, 'Release', release);
        Result := Result and (release >= minVersion);
    end;

    if Result =false then
    begin
        MsgBox('This setup requires the .NET Framework version 4.7.2. Please install the .NET Framework and run this setup again.',
            mbInformation, MB_OK);
    end;
end;
